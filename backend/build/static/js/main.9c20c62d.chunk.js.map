{"version":3,"sources":["constants.ts","components/RecipeView.tsx","components/Preview.tsx","components/RecipeList.tsx","components/NavigationBar.tsx","components/SignUpForm.tsx","components/LoginForm.tsx","components/SearchView.tsx","components/ProfileView.tsx","components/NewRecipeForm.tsx","components/NewRecipe.tsx","App.tsx","index.tsx"],"names":["apiBaseUrl","RecipeView","id","useParams","React","useState","recipe","setRecipe","useEffect","a","axios","get","response","console","log","process","data","getRecipe","title","link","target","style","paddingLeft","rel","href","className","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","tags","map","t","Badge","margin","variant","key","to","description","ingredients","i","directions","Preview","Card","minHeight","Body","Title","Text","length","substr","Button","RecipeList","recipes","CardColumns","r","NavigationBar","user","logout","showNewModal","history","useHistory","searchTerm","setSearchTerm","hideLoggedIn","display","undefined","showLoggedIn","Navbar","collapseOnSelect","expand","bg","Brand","alt","src","Toggle","aria-controls","Collapse","Form","inline","onSubmit","event","push","preventDefault","FormControl","type","placeholder","value","onChange","Nav","Link","active","useLocation","pathname","Dropdown","username","Menu","Item","onClick","OverlayTrigger","placement","overlay","Tooltip","icon","faPlus","SignUpForm","firstName","setFirstName","lastName","setLastName","setUsername","email","setEmail","password","setPassword","handleSubmit","currentTarget","checkValidity","stopPropagation","newUser","name","friends","lists","post","returned","Row","Col","Group","Label","Control","required","controlId","InputGroup","Prepend","aria-describedby","Feedback","LoginForm","window","localStorage","setItem","JSON","stringify","SearchView","setRecipes","searching","setSearching","query","URLSearchParams","search","terms","getAll","queryType","searchRecipes","Spinner","animation","ProfileView","setUser","fullUser","findLists","marginTop","size","faUserCircle","l","NewRecipeForm","NewRecipeModal","handleClose","show","handleShow","Modal","centered","onHide","Header","closeButton","Footer","App","recipeList","setRecipeList","setShow","token","getItem","parse","getRecipes","clear","path","render","NewRecipe","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c20c62d.chunk.js","sourcesContent":["export const apiBaseUrl = 'https://some-recipes.azurewebsites.net/api';","import React from 'react';\r\nimport { Recipe } from '../types';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\nimport { Badge } from 'react-bootstrap';\r\n\r\nconst RecipeView: React.FC = () => {\r\n  const { id } = useParams<{id: string}>();\r\n  const [recipe, setRecipe] = React.useState<Recipe | null>(null);\r\n  \r\n  React.useEffect(() => {\r\n    const getRecipe = async () => {\r\n      const response = await axios.get<Recipe>(`${apiBaseUrl}/recipes/${id}`);\r\n      console.log(\"public url\", process.env.PUBLIC_URL)\r\n      if (response.data) {\r\n        setRecipe(response.data)\r\n      }\r\n    };\r\n    getRecipe();\r\n  }, [id]);\r\n\r\n  if (!recipe) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>{recipe.title}\r\n      { recipe.link ? \r\n          <a target=\"_blank\" title=\"open in new tab\" style={{paddingLeft: '5px'}} rel=\"noopener noreferrer\" href={recipe.link}>\r\n            <svg className=\"bi bi-box-arrow-up-right\"  width=\"1em\" height=\"1em\" viewBox=\"0 0 30 30\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" d=\"M1.5 13A1.5 1.5 0 003 14.5h8a1.5 1.5 0 001.5-1.5V9a.5.5 0 00-1 0v4a.5.5 0 01-.5.5H3a.5.5 0 01-.5-.5V5a.5.5 0 01.5-.5h4a.5.5 0 000-1H3A1.5 1.5 0 001.5 5v8zm7-11a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v5a.5.5 0 01-1 0V2.5H9a.5.5 0 01-.5-.5z\" clipRule=\"evenodd\"/>\r\n              <path fillRule=\"evenodd\" d=\"M14.354 1.646a.5.5 0 010 .708l-8 8a.5.5 0 01-.708-.708l8-8a.5.5 0 01.708 0z\" clipRule=\"evenodd\"/>\r\n            </svg>\r\n            </a>\r\n        : null}\r\n      \r\n      </h2>\r\n      {\r\n        recipe.tags ? \r\n        <div>\r\n          Tags:\r\n          { recipe.tags.map(t =>\r\n            <Badge className=\"ml-10\" style={{margin: 5}} variant=\"light\" key={t}>\r\n              <Link to={`/search?type=tag&terms=${t}`}>{t}</Link>\r\n              </Badge>)}\r\n        </div>\r\n        : null  \r\n      }\r\n      <div>\r\n        {recipe.description}\r\n      </div>\r\n      <h3>Ingredients</h3>\r\n      <ul>\r\n      <div>\r\n          {recipe.ingredients.map((i: string) => <li key={i}>{i}</li>)}\r\n      </div>\r\n      </ul>\r\n        <h3>Directions</h3>\r\n      <ul>\r\n      <div>\r\n          {recipe.directions.map((i: string) => <li key={i}>{i}</li>)}\r\n      </div>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RecipeView","import React from 'react';\r\nimport { Recipe } from '../types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nconst Preview: React.FC<{ recipe: Recipe }> = ({ recipe }) => {\r\n  const trimmedText = (): string => {\r\n    if (!recipe.description) {\r\n      return \"...\";\r\n    }\r\n    if (recipe.description.length > 250) {\r\n      return recipe.description.substr(0, 250) + \"...\";\r\n    }\r\n    return recipe.description;\r\n  }\r\n\r\n\r\n  return (\r\n    <Card style={{ minHeight: \"200px\"}}>\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <Link to={`/recipes/${recipe.id}`}>{recipe.title}</Link>\r\n        </Card.Title>\r\n        <Card.Text>{trimmedText()}</Card.Text>\r\n        <Button href={`/recipes/${recipe.id}`}>View</Button>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Preview","import React from 'react';\r\nimport { CardColumns } from 'react-bootstrap';\r\nimport { Recipe } from '../types';\r\nimport Preview from './Preview'\r\n\r\nconst RecipeList: React.FC<{ recipes: Recipe[] | null }> = ({ recipes }) => {\r\n  if (!recipes) {\r\n      return (\r\n          <div>\r\n              <h3>loading...</h3>\r\n          </div>\r\n      )\r\n  }\r\n  return (\r\n    <CardColumns>\r\n        {recipes.map((r: Recipe) => (\r\n            <Preview key={r.id} recipe={r}/>\r\n        ))}\r\n    </CardColumns>\r\n  )\r\n}\r\n\r\nexport default RecipeList","import React, { useState } from 'react';\r\nimport { Button, Navbar, Nav, Form, FormControl, OverlayTrigger, Tooltip, Dropdown } from 'react-bootstrap'\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { User } from '../types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface Props {\r\n  user: User|null;\r\n  logout: () => void;\r\n  showNewModal: () => void;\r\n}\r\n\r\nconst NavigationBar: React.FC<Props> = ({user, logout, showNewModal}: Props) => {\r\n  let history = useHistory();\r\n  const [ searchTerm, setSearchTerm ] = useState('');\r\n\r\n  \r\n  const hideLoggedIn = user !== null ? { display: \"none\" } : undefined;\r\n  const showLoggedIn = user === null ? { display: \"none\" } : undefined;\r\n\r\n  const searchRecipes = (event: React.FormEvent<EventTarget>) => {\r\n    console.log(searchTerm);\r\n    history.push(`/search?type=title&terms=${searchTerm}`)\r\n    setSearchTerm('');\r\n    event.preventDefault();\r\n  }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"light\">\r\n        <div className=\"container\">\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"/spoon-fork.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"  />{' '}\r\n          Some Recipes\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Form inline className=\"ml-auto mr-auto\" onSubmit={searchRecipes}>\r\n            <FormControl \r\n              type=\"text\" \r\n              placeholder=\"Search\" \r\n              value={searchTerm} \r\n              onChange={({ target }) => setSearchTerm(target.value)} \r\n            />\r\n          </Form>\r\n          <Nav className=\"ml-auto\" >\r\n            <Nav.Link href=\"/\" active={useLocation().pathname === \"/\"}>Home</Nav.Link>\r\n            <Nav.Link href=\"/recipes\" active={useLocation().pathname === \"/recipes\"}>My Recipes</Nav.Link>\r\n            <Nav.Link href=\"/signup\" style={hideLoggedIn} active={useLocation().pathname === \"/signup\"}>Sign Up</Nav.Link>\r\n            <Nav.Link href=\"/login\" style={hideLoggedIn} active={useLocation().pathname === \"/login\"}>Login</Nav.Link>\r\n            {\r\n              user ? \r\n              <Dropdown>\r\n                <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                   {user.username}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item href={`/profile/${user.username}`}>Profile</Dropdown.Item>\r\n                  <Dropdown.Item onClick={logout}>Logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              : null\r\n            }\r\n            <OverlayTrigger placement=\"bottom\" overlay={\r\n              <Tooltip id=\"add-new-recipe-tooltip\" >Add new recipe</Tooltip>\r\n            }>\r\n            <Button onClick={showNewModal} variant=\"primary\" style={showLoggedIn}>\r\n              <FontAwesomeIcon icon={faPlus}/>\r\n            </Button>\r\n\r\n            </OverlayTrigger>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        </div>\r\n      </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavigationBar;","import React, { useState } from 'react';\r\nimport { Form, Button, Col, InputGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\nimport { NewUser } from '../types'\r\n\r\nconst SignUpForm: React.FC = () => {\r\n\r\n    const [ firstName, setFirstName] = useState('');\r\n    const [ lastName, setLastName] = useState('');\r\n    const [ username, setUsername] = useState('');\r\n    const [ email, setEmail] = useState('');\r\n    const [ password, setPassword] = useState('');\r\n\r\n\r\n\r\n    const handleSubmit = async (event: React.FormEvent<EventTarget>) => {\r\n      const form = event.currentTarget as HTMLInputElement;\r\n      if (form.checkValidity() === false) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n      }\r\n      const newUser: NewUser = {\r\n          username: username,\r\n          email: email,\r\n          name: `${firstName} ${lastName}`,\r\n          friends: [],\r\n          lists: [],\r\n          password: password\r\n      }\r\n      const returned = await axios.post(`${apiBaseUrl}/users`, newUser)\r\n      console.log(returned.data);\r\n    };\r\n  return (\r\n      <div>\r\n          <h1>Sign up</h1>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n                <Col>\r\n                    <Form.Group>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control \r\n                            type=\"text\" \r\n                            required \r\n                            placeholder=\"John\" \r\n                            value={firstName} \r\n                            onChange={({ target }) => setFirstName(target.value)} />\r\n                    </Form.Group>\r\n                </Col>\r\n                <Col>    \r\n                    <Form.Group>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control \r\n                            required \r\n                            type=\"text\" \r\n                            placeholder=\"Smith\"\r\n                            value={lastName}\r\n                            onChange={({ target }) => setLastName(target.value)} />\r\n                    </Form.Group>\r\n                </Col>\r\n            </Form.Row>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control \r\n                    type=\"email\" \r\n                    required \r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={({ target }) => setEmail(target.value)} />\r\n            </Form.Group>\r\n            <Form.Group  controlId=\"validationCustomUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <InputGroup>\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        aria-describedby=\"inputGroupPrepend\"\r\n                        required\r\n                        value={username}\r\n                        onChange={({ target }) => setUsername(target.value)}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    Please choose a username.\r\n                    </Form.Control.Feedback>\r\n                </InputGroup>\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    required \r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={({ target }) => setPassword(target.value)} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n          </Form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LoginForm: React.FC = () => {\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword] = useState('');\r\n    let history = useHistory();\r\n    const handleSubmit = async (event: React.FormEvent<EventTarget>) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      const response = await axios.post(`${apiBaseUrl}/login`, { email: email, password: password})\r\n      console.log(response.data)\r\n      if (response.data) {\r\n        window.localStorage.setItem('some-recipes-user-token', JSON.stringify(response.data));\r\n      }\r\n      setEmail('');\r\n      setPassword('');\r\n      history.push('/');\r\n    };\r\n  return (\r\n      <div>\r\n          <h1>Login</h1>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control \r\n                    type=\"text\" \r\n                    required \r\n                    placeholder=\"abc@example.com\"\r\n                    value={email}\r\n                    onChange={({ target }) => setEmail(target.value)} />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control \r\n                    type=\"password\" \r\n                    required \r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={({ target }) => setPassword(target.value)} />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n          </Form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react';\r\nimport { CardColumns, Spinner } from 'react-bootstrap';\r\nimport { Recipe } from '../types';\r\nimport Preview from './Preview'\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\nconst SearchView: React.FC = () => {\r\n  const [ recipes, setRecipes ] = useState<Recipe[]>([]);\r\n  const [ searching, setSearching ] = useState(true);\r\n  const query = useQuery();\r\n\r\n  React.useEffect(() => {\r\n      const searchRecipes = async () => {\r\n\r\n          const terms = query.getAll(\"terms\")\r\n          const queryType = query.getAll(\"type\")\r\n          if (!terms || !queryType) {\r\n            return;\r\n          } else {\r\n              const recipes = await axios.get<Recipe[]>(`${apiBaseUrl}/search?type=${queryType}&terms=${terms}`)\r\n              if (recipes) {\r\n                  setRecipes(recipes.data);\r\n              }\r\n              setSearching(false);\r\n          }\r\n      }\r\n      searchRecipes();\r\n  }, [])\r\n\r\n  if (searching === true) {\r\n      return (\r\n          <Spinner animation=\"border\"/>\r\n      )\r\n  } \r\n  if (recipes.length === 0) {\r\n      return (\r\n          <div className=\"container\">\r\n            <h2>No recipes found. Try again?</h2>\r\n            <div>searching {searching}</div>\r\n            <Spinner animation=\"border\" className=\"mr-auto ml-auto\"/>\r\n          </div>\r\n\r\n      )\r\n  }\r\n  return (\r\n    <CardColumns>\r\n        {\r\n            recipes.map((r: Recipe) => (\r\n            <Preview key={r.id} recipe={r}/>\r\n        ))}\r\n    </CardColumns>\r\n  )\r\n}\r\n\r\nexport default SearchView","import React, { useState } from 'react';\r\nimport { CardColumns, Spinner } from 'react-bootstrap';\r\nimport { Recipe, User, RecipeList } from '../types';\r\nimport Preview from './Preview'\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { apiBaseUrl } from '../constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst ProfileView: React.FC = () => {\r\n    const { username } = useParams<{username: string}>();\r\n    const [ user, setUser ] = useState<User|undefined>(undefined);\r\n    React.useEffect(() => {\r\n        const findLists = async () => {\r\n            if (!username) {\r\n                return;\r\n            }\r\n            const fullUser = await axios.get<User|undefined>(`${apiBaseUrl}/users/${username}`)\r\n            if (fullUser) {\r\n                setUser(fullUser.data);\r\n                console.log('fullUser', fullUser.data)\r\n            }\r\n        }\r\n        findLists();\r\n    }, [ username ])\r\n\r\n    if (!user) {\r\n        return (\r\n            <div>Profile</div>\r\n        )\r\n    }\r\n    return (\r\n        <div >\r\n            <div className=\"d-flex flex-row \" style={{ marginTop: 40}}>\r\n            <FontAwesomeIcon size=\"10x\" icon={faUserCircle} />\r\n            <h3 className=\"mt-auto\">{user.name}</h3>\r\n            </div>\r\n            <ul>\r\n                { \r\n                  user.lists?.map(l => \r\n                     <li key={l.title} >{l.title}</li> \r\n                  )\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default ProfileView","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst NewRecipeForm = () => {\r\n    return (\r\n      <Form>\r\n\r\n      </Form>\r\n    )\r\n}\r\n\r\nexport default NewRecipeForm;","import React, { useState } from 'react';\r\nimport NewRecipeForm from './NewRecipeForm';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\ninterface Props {\r\n  handleClose: () => void;\r\n  handleShow: () => void;\r\n  show: boolean;\r\n}\r\n\r\nconst NewRecipeModal: React.FC<Props> = ({ handleClose, handleShow, show }: Props) => {\r\n\r\n    return (\r\n        <Modal size=\"lg\" centered show={show} onHide={handleClose} >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>\r\n              Add new recipe\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <NewRecipeForm />\r\n            <div>new recipe form</div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n                Add\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NewRecipeModal;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { apiBaseUrl } from './constants'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, useHistory\n} from 'react-router-dom';\n\nimport RecipeView from './components/RecipeView'\nimport RecipeList from './components/RecipeList'\nimport NavigationBar from './components/NavigationBar';\nimport SignUpForm from './components/SignUpForm';\nimport LoginForm from './components/LoginForm';\nimport SearchView from './components/SearchView';\nimport ProfileView from './components/ProfileView';\nimport NewRecipe from './components/NewRecipe';\nimport { User } from './types';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst App: React.FC = () => {\n  const [ recipeList, setRecipeList ] = useState(null)\n  const [ user, setUser ] = useState<User|null>(null);\n  const [ showNewRecipe, setShowNewRecipe ] = useState(false);\n  let history = useHistory();\n\n  const [ show, setShow ] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  React.useEffect(() => {\n    const token = localStorage.getItem('some-recipes-user-token');\n    if (token) {\n      setUser(JSON.parse(token).user);\n      console.log('parsed', JSON.parse(token));\n    }\n  }, [])\n\n  const logout = () => {\n    localStorage.clear();\n    history?.push('/');\n  }\n\n  React.useEffect(() => {\n    const getRecipes = async () => {\n      const data = await axios.get(`${apiBaseUrl}/recipes`)\n      console.log(data)\n      setRecipeList(data.data);\n    }\n    getRecipes();\n  }, [])\n\n  return (\n    <div>\n      <Router>\n        <NavigationBar user={user} logout={logout} showNewModal={handleShow} />\n        <div className=\"container\">\n        <Switch>\n          <Route path=\"/recipes/:id\" render={() => <RecipeView />} />\n          <Route path=\"/recipes\">\n            <RecipeList recipes={recipeList}/>\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUpForm />\n          </Route>\n          <Route path=\"/search\">\n            <SearchView />\n          </Route>\n          <Route path=\"/profile/:username\">\n            <ProfileView />\n          </Route>\n          <Route path=\"/\">\n            <h1>Home</h1>\n            <Button onClick={() => setShow(true)}>Show modal</Button>\n            <NewRecipe show={show} handleClose={handleClose} handleShow={handleShow} />\n          </Route>\n        </Switch>\n        </div>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}